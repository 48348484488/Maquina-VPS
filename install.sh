clear && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo "  🚀 Instalador Wine Pawn para VS Code v1.0" && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo "" && sleep 1 && echo "🔍 [1/8] Verificando extensões anteriores..." && EXT_FOUND=false && if code --list-extensions 2>/dev/null | grep -q "southclaws.vscode-pawn"; then EXT_FOUND=true; fi && if code --list-extensions 2>/dev/null | grep -q "sanaajani.taskrunnercode"; then EXT_FOUND=true; fi && if [ "$EXT_FOUND" = true ]; then echo "🗑️  Removendo extensões antigas..." && code --uninstall-extension southclaws.vscode-pawn >/dev/null 2>&1 && code --uninstall-extension sanaajani.taskrunnercode >/dev/null 2>&1 && echo "✓ Extensões removidas" && sleep 1; else echo "✓ Nenhuma extensão anterior detectada"; fi && sleep 1 && echo "" && echo "🧹 [2/8] Limpando diretório de trabalho..." && sudo rm -rf pawno pawncc gamemodes .vscode 2>/dev/null && (shopt -s dotglob nullglob; for item in *; do [ "$item" != ".git" ] && sudo rm -rf "$item" 2>/dev/null; done) && echo "✓ Diretório limpo com sucesso" && sleep 1 && echo "" && echo "🍷 [3/8] Instalando Wine 32-bit (2-5 minutos)..." && echo "" && echo "⏳ Aguarde... Este processo pode demorar." && echo "" && (sudo apt remove --purge wine wine32 wine64 -y >/dev/null 2>&1; sudo apt autoremove -y >/dev/null 2>&1; rm -rf ~/.wine; sudo dpkg --add-architecture i386 >/dev/null 2>&1; sudo apt update >/dev/null 2>&1; sudo groupadd -f kvm >/dev/null 2>&1; sudo apt install -y qemu-kvm libvirt-daemon-system virtinst >/dev/null 2>&1; sudo mkdir -pm755 /etc/apt/keyrings >/dev/null 2>&1; sudo wget -q -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key; sudo wget -q -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources; sudo apt update >/dev/null 2>&1; sudo apt install --install-recommends winehq-stable -y >/dev/null 2>&1; WINE_INSTALL_STATUS=$?; mkdir -p /tmp/runtime-codespace; chmod 700 /tmp/runtime-codespace; export XDG_RUNTIME_DIR=/tmp/runtime-codespace; export WINEARCH=win32; export WINEPREFIX=~/.wine; export WINEDEBUG=-all; export DISPLAY=:0; wineboot -u >/dev/null 2>&1; grep -q "WINEARCH=win32" ~/.bashrc || echo -e "\n# Configuração Wine 32-bit\nexport XDG_RUNTIME_DIR=/tmp/runtime-codespace\nexport WINEARCH=win32\nexport WINEPREFIX=~/.wine\nexport WINEDEBUG=-all\nexport DISPLAY=:0" >> ~/.bashrc; source ~/.bashrc; echo ""; if command -v wine >/dev/null 2>&1; then WINE_VERSION=$(wine --version 2>/dev/null); echo "✓ Wine instalado com sucesso [$WINE_VERSION]"; else echo "❌ Erro na instalação do Wine (código: $WINE_INSTALL_STATUS)"; echo "   Possíveis causas:"; echo "   - Sistema não é Ubuntu/Debian"; echo "   - Repositório jammy incompatível"; echo "   - Falta de espaço em disco"; fi); sleep 1 && echo "" && echo "📦 [4/8] Instalando dependências adicionais..." && sudo apt install -y unzip zip wget python3-pip >/dev/null 2>&1 && if command -v unzip >/dev/null && command -v zip >/dev/null && command -v wget >/dev/null; then echo "✓ Dependências instaladas [unzip, zip, wget, pip]"; else echo "❌ Erro ao instalar dependências"; exit 1; fi && sleep 1 && echo "" && echo "⬇️  [5/8] Baixando compilador Pawn Wine..." && wget -q --show-progress https://github.com/48348484488/VSCODE-PAWN-COMPILER-FOR-ANDROID---WINE/raw/4d017d3abe36737751a2f0fc4b59ef1c6ce50555/pawnc-3.10.10-wine.zip 2>&1 | grep -v "%" | tail -1 && if [ -f "pawnc-3.10.10-wine.zip" ]; then FILE_SIZE=$(du -h pawnc-3.10.10-wine.zip | cut -f1); echo "✓ Download concluído [$FILE_SIZE]"; else echo "❌ Erro no download do compilador"; echo "   Tentando download alternativo..."; wget --no-check-certificate -q --show-progress https://github.com/48348484488/VSCODE-PAWN-COMPILER-FOR-ANDROID---WINE/raw/4d017d3abe36737751a2f0fc4b59ef1c6ce50555/pawnc-3.10.10-wine.zip 2>&1 | grep -v "%" | tail -1; if [ -f "pawnc-3.10.10-wine.zip" ]; then echo "✓ Download alternativo OK"; else echo "❌ Falha total no download"; exit 1; fi; fi && sleep 1 && echo "" && echo "📂 [6/8] Extraindo compilador Pawn..." && sudo rm -rf pawncc pawno gamemodes 2>/dev/null && if [ -f "pawnc-3.10.10-wine.zip" ]; then unzip -q -o pawnc-3.10.10-wine.zip && rm -rf pawnc-3.10.10-wine.zip pawnc-3.10.10-wine.zip.*; if [ -d "pawno" ] || [ -d "pawncc" ]; then echo "✓ Compilador extraído com sucesso"; else echo "❌ Erro na extração - pastas não foram criadas"; exit 1; fi; else echo "❌ Arquivo pawnc-3.10.10-wine.zip não existe"; exit 1; fi && sleep 1 && echo "" && echo "⚙️  [7/8] Configurando ambiente de desenvolvimento..." && wget -q https://github.com/48348484488/VSCODE-PAWN-COMPILER-FOR-ANDROID---WINE/raw/4d017d3abe36737751a2f0fc4b59ef1c6ce50555/task.zip && if [ -f "task.zip" ]; then unzip -q -o task.zip && rm -f task.zip && mv vscode .vscode 2>/dev/null; fi && if [ -d ".vscode" ] && [ -f ".vscode/tasks.json" ]; then echo "✓ Ambiente configurado [tasks.json criado]"; else echo "❌ Erro na configuração do ambiente"; exit 1; fi && sleep 1 && echo "" && echo "🔌 [8/8] Instalando extensões do VS Code..." && code --install-extension southclaws.vscode-pawn >/dev/null 2>&1 && code --install-extension sanaajani.taskrunnercode >/dev/null 2>&1 && sleep 2 && EXT_PAWN=$(code --list-extensions 2>/dev/null | grep -c "southclaws.vscode-pawn") && EXT_TASK=$(code --list-extensions 2>/dev/null | grep -c "sanaajani.taskrunnercode") && TOTAL_EXT=$((EXT_PAWN + EXT_TASK)) && if [ "$TOTAL_EXT" -eq 2 ]; then echo "✓ Extensões instaladas [2/2 confirmadas]"; elif [ "$TOTAL_EXT" -eq 1 ]; then echo "⚠️  Extensões parcialmente instaladas [1/2]"; echo "⚠️  Solução: Atualize a página (F5) e tente novamente"; else echo "❌ Erro ao instalar extensões"; echo "❌ Solução: Atualize a página (F5) e execute o script novamente"; echo "   As extensões podem não ter sido instaladas devido a:"; echo "   - Problemas temporários de conexão"; echo "   - Cache do VS Code desatualizado"; echo "   - Marketplace momentaneamente indisponível"; fi && sleep 2 && clear && echo "" && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo "  ✨ Relatório de Instalação Completo" && echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo "" && echo "📊 COMPONENTES DO SISTEMA:" && echo "" && if command -v wine >/dev/null 2>&1; then WINE_VER=$(wine --version 2>/dev/null | head -n1); WINE_ARCH="win32"; echo "  ✅ Wine: $WINE_VER"; echo "     └─ Arquitetura: $WINE_ARCH"; echo "     └─ Prefix: ~/.wine"; echo "     └─ Status: Configurado"; else echo "  ❌ Wine: FALHA NA INSTALAÇÃO"; fi && echo "" && if [ -d "pawncc" ]; then PAWNCC_SIZE=$(du -sh pawncc 2>/dev/null | cut -f1); echo "  ✅ Compilador Pawn (Wine)"; echo "     └─ Localização: $(pwd)/pawncc"; echo "     └─ Tamanho: $PAWNCC_SIZE"; echo "     └─ Tipo: Wine executável"; elif [ -d "pawno" ]; then PAWNO_SIZE=$(du -sh pawno 2>/dev/null | cut -f1); echo "  ✅ Compilador Pawn (Wine)"; echo "     └─ Localização: $(pwd)/pawno"; echo "     └─ Tamanho: $PAWNO_SIZE"; echo "     └─ Tipo: Wine executável"; else echo "  ❌ Compilador Pawn: FALHA NA INSTALAÇÃO"; fi && echo "" && if command -v code >/dev/null 2>&1; then VSCODE_VER=$(code --version 2>/dev/null | head -n1); echo "  ✅ Visual Studio Code: $VSCODE_VER"; else echo "  ❌ VS Code: Não detectado"; fi && echo "" && echo "🔌 EXTENSÕES INSTALADAS:" && echo "" && code --list-extensions 2>/dev/null | grep "southclaws.vscode-pawn" >/dev/null && echo "  ✅ southclaws.vscode-pawn (Pawn Language Support)" || echo "  ❌ southclaws.vscode-pawn (NÃO INSTALADA - Atualize a página)" && code --list-extensions 2>/dev/null | grep "sanaajani.taskrunnercode" >/dev/null && echo "  ✅ sanaajani.taskrunnercode (Task Runner)" || echo "  ❌ sanaajani.taskrunnercode (NÃO INSTALADA - Atualize a página)" && echo "" && echo "📁
